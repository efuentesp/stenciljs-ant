/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface CbfTags {
    'caption': string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface StkBreadcrumb {}
  interface StkBreadcrumbItem {
    'label': string;
  }
  interface StkContent {}
  interface StkFooter {}
  interface StkHeader {}
  interface StkHeaderLogo {}
  interface StkHeaderMenu {}
  interface StkLayout {
    'innerLayout': boolean;
  }
  interface StkMenuItem {
    'label': string;
  }
  interface StkSider {}
  interface StkSiderMenu {}
}

declare global {


  interface HTMLCbfTagsElement extends Components.CbfTags, HTMLStencilElement {}
  var HTMLCbfTagsElement: {
    prototype: HTMLCbfTagsElement;
    new (): HTMLCbfTagsElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLStkBreadcrumbElement extends Components.StkBreadcrumb, HTMLStencilElement {}
  var HTMLStkBreadcrumbElement: {
    prototype: HTMLStkBreadcrumbElement;
    new (): HTMLStkBreadcrumbElement;
  };

  interface HTMLStkBreadcrumbItemElement extends Components.StkBreadcrumbItem, HTMLStencilElement {}
  var HTMLStkBreadcrumbItemElement: {
    prototype: HTMLStkBreadcrumbItemElement;
    new (): HTMLStkBreadcrumbItemElement;
  };

  interface HTMLStkContentElement extends Components.StkContent, HTMLStencilElement {}
  var HTMLStkContentElement: {
    prototype: HTMLStkContentElement;
    new (): HTMLStkContentElement;
  };

  interface HTMLStkFooterElement extends Components.StkFooter, HTMLStencilElement {}
  var HTMLStkFooterElement: {
    prototype: HTMLStkFooterElement;
    new (): HTMLStkFooterElement;
  };

  interface HTMLStkHeaderElement extends Components.StkHeader, HTMLStencilElement {}
  var HTMLStkHeaderElement: {
    prototype: HTMLStkHeaderElement;
    new (): HTMLStkHeaderElement;
  };

  interface HTMLStkHeaderLogoElement extends Components.StkHeaderLogo, HTMLStencilElement {}
  var HTMLStkHeaderLogoElement: {
    prototype: HTMLStkHeaderLogoElement;
    new (): HTMLStkHeaderLogoElement;
  };

  interface HTMLStkHeaderMenuElement extends Components.StkHeaderMenu, HTMLStencilElement {}
  var HTMLStkHeaderMenuElement: {
    prototype: HTMLStkHeaderMenuElement;
    new (): HTMLStkHeaderMenuElement;
  };

  interface HTMLStkLayoutElement extends Components.StkLayout, HTMLStencilElement {}
  var HTMLStkLayoutElement: {
    prototype: HTMLStkLayoutElement;
    new (): HTMLStkLayoutElement;
  };

  interface HTMLStkMenuItemElement extends Components.StkMenuItem, HTMLStencilElement {}
  var HTMLStkMenuItemElement: {
    prototype: HTMLStkMenuItemElement;
    new (): HTMLStkMenuItemElement;
  };

  interface HTMLStkSiderElement extends Components.StkSider, HTMLStencilElement {}
  var HTMLStkSiderElement: {
    prototype: HTMLStkSiderElement;
    new (): HTMLStkSiderElement;
  };

  interface HTMLStkSiderMenuElement extends Components.StkSiderMenu, HTMLStencilElement {}
  var HTMLStkSiderMenuElement: {
    prototype: HTMLStkSiderMenuElement;
    new (): HTMLStkSiderMenuElement;
  };
  interface HTMLElementTagNameMap {
    'cbf-tags': HTMLCbfTagsElement;
    'my-component': HTMLMyComponentElement;
    'stk-breadcrumb': HTMLStkBreadcrumbElement;
    'stk-breadcrumb-item': HTMLStkBreadcrumbItemElement;
    'stk-content': HTMLStkContentElement;
    'stk-footer': HTMLStkFooterElement;
    'stk-header': HTMLStkHeaderElement;
    'stk-header-logo': HTMLStkHeaderLogoElement;
    'stk-header-menu': HTMLStkHeaderMenuElement;
    'stk-layout': HTMLStkLayoutElement;
    'stk-menu-item': HTMLStkMenuItemElement;
    'stk-sider': HTMLStkSiderElement;
    'stk-sider-menu': HTMLStkSiderMenuElement;
  }
}

declare namespace LocalJSX {
  interface CbfTags extends JSXBase.HTMLAttributes<HTMLCbfTagsElement> {
    'caption'?: string;
  }
  interface MyComponent extends JSXBase.HTMLAttributes<HTMLMyComponentElement> {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface StkBreadcrumb extends JSXBase.HTMLAttributes<HTMLStkBreadcrumbElement> {}
  interface StkBreadcrumbItem extends JSXBase.HTMLAttributes<HTMLStkBreadcrumbItemElement> {
    'label'?: string;
  }
  interface StkContent extends JSXBase.HTMLAttributes<HTMLStkContentElement> {}
  interface StkFooter extends JSXBase.HTMLAttributes<HTMLStkFooterElement> {}
  interface StkHeader extends JSXBase.HTMLAttributes<HTMLStkHeaderElement> {}
  interface StkHeaderLogo extends JSXBase.HTMLAttributes<HTMLStkHeaderLogoElement> {}
  interface StkHeaderMenu extends JSXBase.HTMLAttributes<HTMLStkHeaderMenuElement> {}
  interface StkLayout extends JSXBase.HTMLAttributes<HTMLStkLayoutElement> {
    'innerLayout'?: boolean;
  }
  interface StkMenuItem extends JSXBase.HTMLAttributes<HTMLStkMenuItemElement> {
    'label'?: string;
  }
  interface StkSider extends JSXBase.HTMLAttributes<HTMLStkSiderElement> {}
  interface StkSiderMenu extends JSXBase.HTMLAttributes<HTMLStkSiderMenuElement> {}

  interface IntrinsicElements {
    'cbf-tags': CbfTags;
    'my-component': MyComponent;
    'stk-breadcrumb': StkBreadcrumb;
    'stk-breadcrumb-item': StkBreadcrumbItem;
    'stk-content': StkContent;
    'stk-footer': StkFooter;
    'stk-header': StkHeader;
    'stk-header-logo': StkHeaderLogo;
    'stk-header-menu': StkHeaderMenu;
    'stk-layout': StkLayout;
    'stk-menu-item': StkMenuItem;
    'stk-sider': StkSider;
    'stk-sider-menu': StkSiderMenu;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


